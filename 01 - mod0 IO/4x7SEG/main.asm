;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Cum Mar 11 2016
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================
STAK    SEGMENT PARA STACK 'STACK'
        DW 20 DUP(?)
STAK    ENDS

DATA    SEGMENT PARA 'DATA'
DIGITS  DB 0C0H, 0F9H, 0A4H, 0B0H, 99H, 92H, 82H, 0F8H, 80H, 98H
DATA    ENDS

CODE    SEGMENT PARA 'CODE'
        ASSUME CS:CODE, DS:DATA, SS:STAK
START:
        MOV AX, DATA
	MOV DS, AX
        MOV AL, 80H
	OUT 66H, AL
	MOV AX, 2021H
        ; Write your code here
ENDLESS:
        CALL LIGHT
        JMP ENDLESS
LIGHT PROC
        ; Sends 4 digits (each 4 bits, total: 1 word) represented by AX
	; Assumes DIGITS arr is defined in DS
	PUSH AX
	PUSH SI
	PUSH CX
	PUSH BX
	PUSH DX
	MOV DL, 8H
	MOV CX, 4H
DIG:	MOV SI, AX
        AND SI, 000FH
	MOV BX, AX ; reserve AX
	MOV AL, 0FFH
	OUT 62H, AL
	MOV AL, DL
	OUT 64H, AL
	SHR DL, 1 ; set next bit in Port-C
	MOV AL, DIGITS[SI]
	OUT 62H, AL
	MOV AX, BX
	MOV BX, CX ; reserve CX for loop
	MOV CL, 4H
	SHR AX, CL ; get rid of the LS 4-bits
	MOV CX, BX ; restore CX
	LOOP DIG
	POP DX
	POP BX
	POP CX
	POP SI
	POP AX
	RET
LIGHT ENDP
CODE    ENDS
        END START